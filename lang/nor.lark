// NoR의 문법을 정의합니다.

// ======================================================================
// Start Rule (시작 규칙)
// ======================================================================

start: statement+

// ======================================================================
// Statements (명령문)
// ======================================================================
statement: property_assignment_statement
        | complex_assignment_statement
        | io_statement 
        | data_statement
        | create_graph_statement 
        | draw_statement

// 속성 지정 문법 ("객체의 속성은 값이다" 또는 "속성은 값이다")
// 예: 마커의 색은 "빨강"
// 예: 배경색은 "검정" (현재 그래프의 배경색으로 간주)
property_assignment_statement: (object_selector access_operator)? property_key assign_operator STRING

// 복합 속성 지정 여러가지의 속성을 한 문장에 할당
complex_assignment_statement: set_axis_labels_statement

// "의" 또는 "." 앞에 오는, 속성을 지정할 대상 객체
object_selector: GRAPH_KEYWORD     // "그래프의 배경색은 ..."
               | X_AXIS_KEYWORD    // "x축의 색은 ..."
               | Y_AXIS_KEYWORD    // "y축의 굵기는 ..."
               | MARKER_KEYWORD    // "마커의 종류는 ..."
               | LINE_KEYWORD      // "선의 스타일은 ..."

// io 관련된 문장
io_statement: load_command 
            | save_command

load_command: LOAD_KEYWORD STRING
save_command: SAVE_KEYWORD STRING

// 데이터 관련 문장
data_statement: DATA_KEYWORD assign_operator vector

// graph_context 를 시작하는 문장
create_graph_statement: CREATE_GRAPH_KEYWORD STRING 

// 그래프를 그리는 문장
draw_statement: DRAW_KEYWORD



// ======================================================================
// Complex Property Assignment Statement (여러 속성을 한번에 정의 가능한 복합 문장)
// ======================================================================
set_axis_labels_statement: SET_LABELS_KEYWORD STRING STRING


// ======================================================================
// Core Components for Property Assignment (속성 할당 핵심 요소)
// ======================================================================


// 속성을 할당해주는 연산자.
assign_operator: "은" | "는" | "=" | "<-"

// 어느 객체의 속성에 접근할 것인지 지정해주는 연산자.
access_operator: "의" | "."


// 다양한 속성을 나타내는 키워드들 (기존 property_keyword, graph_property_keyword, common_property_keyword 통합)
property_key: SET_TITLE_KEYWORD
            | SET_TYPE_KEYWORD      // 그래프 종류 "종류는 '막대'"
            | SET_LEGEND_KEYWORD
            | SET_FONT_KEYWORD
            | SET_RATIO_KEYWORD
            | SET_BACKGROUND_KEYWORD
            | SIZE_KEYWORD
            | SET_COLOR_KEYWORD
            | SET_THICKNESS_KEYWORD
            | SET_NAME_KEYWORD     
            // 단일 속성 지정에 대해서 올 수 있는 지정자들.

// ======================================================================
// Terminals: Keywords (터미널: 키워드)
// ======================================================================

// --- Command Keywords (명령 키워드) ---
CREATE_GRAPH_KEYWORD: "그래프생성"
LOAD_KEYWORD: "로드" | "불러오기" | "가져오기" | "load" | "ld" | "open"
SAVE_KEYWORD: "세이브" | "저장하기" | "저장" | "save" | "sv"
DATA_KEYWORD: "데이터"
DRAW_KEYWORD: "그리기" | "draw" | "그려줘"

// --- Selector Keywords (선택자 키워드) ---
MARKER_KEYWORD: "마커" 
LINE_KEYWORD: "선"
GRAPH_KEYWORD: "그래프" // 굳이 안 써도 되지만 명시적으로 하고 싶으면 써도 됨.
X_AXIS_KEYWORD: "x축" | "엑스축" | "xaxis" // X축은 "엑스축"
Y_AXIS_KEYWORD: "y축" | "와이축" | "ylabel" // Y축은 "와이축"

// --- Property Name Keywords (속성 이름 키워드 정의) ---
SET_TYPE_KEYWORD: "종류" | "타입" | "type" | "유형" // 유형은 "막대"
SET_TITLE_KEYWORD: "제목" | "타이틀" | "title" // 제목 "문법 정의파일"
SET_LABELS_KEYWORD: "축이름" | "레이블" | "labels" // 축이름 "엑스축" "와이축"

SET_LEGEND_KEYWORD: "범례" | "legend" // 범례는.. "위치"
SET_FONT_KEYWORD: "글꼴" | "폰트" | "font" // 폰트는 "맑은 고딕"
SET_RATIO_KEYWORD: "비율" | "그래프비율"  // 비율은 "3대1" , "3:1"
SET_BACKGROUND_KEYWORD: "배경색" | "배경" // "배경은 "초록" "

// 공통 속성 지정 키워드
SIZE_KEYWORD: "크기" | "size" // 폰트 크기 또는 그래프 크기 등에 사용될 수 있음
SET_COLOR_KEYWORD: "색" | "색상" | "색깔" | "color" | "colour" // 여기저기 색깔이 들어갈 수 있음.
SET_THICKNESS_KEYWORD: "굵기" | "thickness"
SET_NAME_KEYWORD: "이름" 


// ======================================================================
// Data Types (데이터 타입) 기본 자료형
// ======================================================================
atom: NUMBER | STRING
element: atom | vector
elements: element ("," element)*

vector : empty_vector | non_empty_vector

empty_vector: "[" "]"
non_empty_vector: "[" elements "]"

STRING: DQ_STRING | SQ_STRING
BOOLEAN: TRUE | FALSE 

TRUE: "true" | "True" | "참"
FALSE: "false" | "False" | "거짓"

// 쌍따옴표 문자열과 따옴표 문자열.
DQ_STRING: /"[^"\\]*(\\.[^"\\]*)*"/
SQ_STRING: /'[^'\\]*(\\.[^'\\]*)*'/

// ======================================================================
// Comments and Whitespace (주석 및 공백 처리)
// ======================================================================

LINE_COMMENT: /\/\/.*/
BLOCK_COMMENT: /\/\*.*?\*\//s

%import common.WS
%import common.SIGNED_NUMBER -> NUMBER
%ignore WS

%ignore LINE_COMMENT
%ignore BLOCK_COMMENT